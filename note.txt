vagrant ssh docker01

cd /home/ansible
git clone https://github.com/Tolagai87/demo.git

ssh-keygen -t rsa -b 4096 -f /home/ansible/.ssh/id_rsa -N ""

скопировать публичный ключ на все хосты
/home/ansible/.ssh/authorized_keys

отключаем запрос пароля при sudo
vim /etc/sudoers.d/ansible
ansible ALL=(ALL)  NOPASSWD: ALL

/usr/local/bin/etcdctl --endpoints=http://192.168.56.10:2379 endpoint health



/usr/local/bin/patronictl -c /etc/patroni.yml list

su postgres
psql
CREATE ROLE test_user WITH LOGIN PASSWORD 'm9DMjeb2JoADF8kgZxfx';
CREATE DATABASE test_db1 OWNER test_user;

добавить в конфиг строку и перезапустить ансибл роль
- host test_db1 test_user 0.0.0.0/0 md5

установить - postgresql-contrib на каждой ноде
добавить в конфиг патрони в блок parameters
    shared_preload_libraries: "pg_stat_statements"
    pg_stat_statements.track: all
    pg_stat_statements.max: 10000
    pg_stat_statements.save: on

CREATE EXTENSION pg_stat_statements;

CREATE ROLE svc_monitoring WITH LOGIN PASSWORD 'vxonMmJjOGKOZzgPx3z0';

GRANT CONNECT ON DATABASE postgres TO svc_monitoring;
GRANT SELECT ON pg_stat_database TO svc_monitoring;
GRANT SELECT ON pg_stat_activity TO svc_monitoring;
GRANT SELECT ON pg_locks TO svc_monitoring;
GRANT SELECT ON pg_stat_replication TO svc_monitoring;


Если не собираются метрики с БД
curl http://localhost:9187/metrics | grep pg_

\dx
CREATE EXTENSION IF NOT EXISTS pg_stat_statements;